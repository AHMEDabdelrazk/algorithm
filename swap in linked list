/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
        ListNode *p1 = head ;
        ListNode *p3 = NULL ;
        ListNode *p2 = head ;
        ListNode *p4 = head ;
       
        
        if(p2!=NULL){
            if(p2->next!=NULL)
                p4=p2->next;
            p2=p2->next;
        }
        
        while(p1!=NULL&&p2!=NULL){
        
            // swap
            if(p1!=NULL&&p2!=NULL){
                p1->next = p2->next;
                p2->next = p1;
                if(p3!=NULL)
                    p3->next = p2;
            }
            ////////////////////
            
            if(p1!=NULL){
                p3=p1;
                p1 = p1->next;
               if(p1!=NULL)
                   p2 = p1->next;
            }
        }
        
        return p4;
    }
};
